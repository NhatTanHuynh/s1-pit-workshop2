def find_max(list):
    if len(list) == 1:     #base case
        return list[0]
    else:
        #recursion case

        middle = len(list) / 2
        left_side = list[0 to middle + 1]
        right_side = list[middle to end]

        max_left = find_max(left_side)
        max_right = find_max(right_side)

        return max(max_left, max_right)


#sketch:
[4,1,5,9,7]
||
[4,1] | [5,9,7] 
#middle / 2 => left [0...mid-1]= [0,1] => [4,1]
||
[4] | [1] | [5] | [9,7]
||
[9], [7]
||
max_left(4,1) = [4]  
max_right(5,9) = [9]
=>max(4,9)=9
